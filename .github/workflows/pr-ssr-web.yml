name: CI [ssr-web]

on:
  pull_request:
    paths:
      - 'packages/ssr-web/**'
      - 'packages/boxel/**'
      - 'packages/cardpay-sdk/**'
      - 'packages/did-resolver/**'
      - 'packages/eslint-config/**'
      - '.github/workflows/pr-ssr-web.yml'
      - 'package.json'
      - 'yarn.lock'

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      # using yarn to install @percy/cli suddenly started causing V8 out of
      # memory errors. According to https://stackoverflow.com/a/56568741 likely
      # there is a dependency cycle that yarn can't see through. However, npm
      # has the ability to collapse these cycles. So we are using npm to install
      # percy
      - run: npm install -g @percy/cli
      - name: Run tests
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SSR_WEB }}
        run: yarn test:ssr-web:percy
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1.28
        if: always()
        with:
          check_name: 'ssr-web test results'
          files: test-results/**/*.xml

  # FIXME this should be in push-main, here for testing
  deploy-web-client-staging:
    name: Deploy ssr-web
    needs: change_check
    # if: ${{ needs.change_check.outputs.web_client == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Deploy ssr-web
        uses: ./.github/actions/deploy-ssr-web
        env:
          # EMBER_DEPLOY_AWS_ACCESS_KEY: ${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_KEY }}
          # EMBER_DEPLOY_AWS_ACCESS_SECRET: ${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_SECRET }}
          HUB_URL: https://hub-staging.stack.cards
          # SENTRY_AUTH_TOKEN: ${{ secrets.WEB_CLIENT_SENTRY_AUTH_TOKEN }}
          # SENTRY_DSN: ${{ secrets.WEB_CLIENT_SENTRY_DSN }}
        with:
          environment: staging
      - name: Send success notification to Discord
        if: ${{ success() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :checkered_flag: **ssr-web** [main] has been successfully deployed to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Send failure notification to Discord
        if: ${{ failure() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :warning: **ssr-web** [main] has failed to deploy to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
