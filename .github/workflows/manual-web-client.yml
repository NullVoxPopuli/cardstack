name: Manual Deploy [web-client]

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Git branch/tag
        required: true
      environment:
        description: Deployment environment
        required: false
        default: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}

      - uses: volta-cli/action@v1

      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --prefer-offline

      - name: Set up env
        env:
          INPUT_ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          if [ "$INPUT_ENVIRONMENT" = "production" ]; then
            echo "EMBER_DEPLOY_AWS_ACCESS_KEY=${{ secrets.PRODUCTION_EMBER_DEPLOY_AWS_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "EMBER_DEPLOY_AWS_ACCESS_SECRET=${{ secrets.PRODUCTION_EMBER_DEPLOY_AWS_ACCESS_SECRET }}" >> $GITHUB_ENV
            echo "LAYER_1_CHAIN=keth" >> $GITHUB_ENV # set to "eth" when ready to go to real money
            echo "LAYER_2_CHAIN=sokol" >> $GITHUB_ENV # set to "xdai" when ready to go to real money
            echo "HUB_URL=https://hub.cardstack.com" >> $GITHUB_ENV
          elif [ "$INPUT_ENVIRONMENT" = "staging" ]; then
            echo "EMBER_DEPLOY_AWS_ACCESS_KEY=${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "EMBER_DEPLOY_AWS_ACCESS_SECRET=${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_SECRET }}" >> $GITHUB_ENV
            echo "HUB_URL=https://hub-staging.stack.cards" >> $GITHUB_ENV
          else
            echo "unrecognized environment"
            exit 1;
          fi

      - name: Deploy
        run: yarn deploy:web-client:${{ github.event.inputs.environment }}
